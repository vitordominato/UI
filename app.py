import streamlit as st
import pandas as pd
from datetime import datetime

st.set_page_config(page_title="Gest√£o de Interna√ß√µes", layout="wide")

# Colunas padr√£o
colunas = [
    "Data de Atualiza√ß√£o", "Risco Assistencial", "N√∫mero do Atendimento", "Nome do Paciente",
    "N√∫mero do Leito", "Unidade", "Andar", "Equipe", "Nome do M√©dico Respons√°vel",
    "Cuidado Paliativo", "Pend√™ncia do Turno", "Aguarda Desospitaliza√ß√£o", "Aguarda Cirurgia",
    "Operadora de Sa√∫de", "Origem do Paciente", "Intercorr√™ncia", "Descri√ß√£o da Intercorr√™ncia",
    "Data/Hora da Intercorr√™ncia", "Alta Prevista para Amanh√£", "Foi Alta", "Setor Atual", "Observa√ß√µes"
]

def carregar_planilha(caminho, colunas_ref=None):
    try:
        df = pd.read_excel(caminho)
        if colunas_ref:
            for col in colunas_ref:
                if col not in df.columns:
                    df[col] = ""
        return df
    except:
        return pd.DataFrame(columns=colunas_ref if colunas_ref else [])

def salvar_planilha(df, caminho):
    df.to_excel(caminho, index=False)

# Carga
df_pacientes = carregar_planilha("Planilha_Mestre_Internacoes_Atualizada.xlsx", colunas)
df_medicos = carregar_planilha("Cadastro_Medicos.xlsx", ["Nome do M√©dico"])
df_altas = carregar_planilha("Pacientes_Altas_Atualizada.xlsx", colunas)
df_obitos = carregar_planilha("Pacientes_Obitos_Atualizada.xlsx", colunas)

st.sidebar.title("Menu")
pagina = st.sidebar.radio("Navega√ß√£o", ["Painel de Interna√ß√µes", "Cadastro de Paciente", "Cadastro de M√©dico"])
st.sidebar.button("üîÑ Atualizar Lista", on_click=st.rerun)

if pagina == "Cadastro de Paciente":
    st.title("Cadastro de Novo Paciente")
    with st.form("form_paciente"):
        atendimento = st.text_input("N√∫mero do Atendimento *")
        nome = st.text_input("Nome do Paciente *")
        leito = st.text_input("N√∫mero do Leito *")
        unidade = st.selectbox("Unidade *", ["Unidade I", "Unidade III", "Unidade IV"])
        andar = st.selectbox("Andar *", [str(i) for i in range(4, 10)])
        equipe = st.selectbox("Equipe *", ["hematologia", "oncologia", "tmo", "hepatologia", "cardiologia", "cl√≠nica m√©dica", "GO", "pediatria", "MA"])
        medico = st.selectbox("Nome do M√©dico Respons√°vel *", sorted(df_medicos["Nome do M√©dico"].dropna().unique().tolist()))
        risco = st.selectbox("Risco Assistencial *", ["Baixo", "Moderado", "Alto"])
        setor = st.text_input("Setor Atual *")
        salvar = st.form_submit_button("Salvar")
        if salvar:
            nova_linha = {
                "Data de Atualiza√ß√£o": datetime.now().date(),
                "Risco Assistencial": risco,
                "N√∫mero do Atendimento": atendimento,
                "Nome do Paciente": nome,
                "N√∫mero do Leito": leito,
                "Unidade": unidade,
                "Andar": andar,
                "Equipe": equipe,
                "Nome do M√©dico Respons√°vel": medico,
                "Setor Atual": setor
            }
            for col in colunas:
                if col not in nova_linha:
                    nova_linha[col] = ""
            df_pacientes = pd.concat([df_pacientes, pd.DataFrame([nova_linha])], ignore_index=True)
            salvar_planilha(df_pacientes, "Planilha_Mestre_Internacoes_Atualizada.xlsx")
            st.success("Paciente cadastrado com sucesso.")
            st.rerun()

elif pagina == "Cadastro de M√©dico":
    st.title("Cadastro de M√©dico")
    with st.form("form_medico"):
        novo_medico = st.text_input("Nome do M√©dico *")
        salvar = st.form_submit_button("Salvar")
        if salvar and novo_medico:
            df_medicos = pd.concat([df_medicos, pd.DataFrame([{"Nome do M√©dico": novo_medico}])], ignore_index=True)
            salvar_planilha(df_medicos, "Cadastro_Medicos.xlsx")
            st.success("M√©dico cadastrado com sucesso.")
            st.rerun()
