import streamlit as st
import pandas as pd
from datetime import datetime, timedelta

st.set_page_config(page_title="Gest√£o de Interna√ß√µes", layout="wide")

# Colunas padr√£o
colunas = [
    "Data de Atualiza√ß√£o", "Risco Assistencial", "N√∫mero do Atendimento", "Nome do Paciente",
    "N√∫mero do Leito", "Unidade", "Andar", "Equipe", "Nome do M√©dico Respons√°vel",
    "Cuidado Paliativo", "Pend√™ncia do Turno", "Aguarda Desospitaliza√ß√£o", "Aguarda Cirurgia",
    "Operadora de Sa√∫de", "Origem do Paciente", "Intercorr√™ncia", "Descri√ß√£o da Intercorr√™ncia",
    "Data/Hora da Intercorr√™ncia", "Alta Prevista para Amanh√£", "Foi Alta", "Setor Atual", "Observa√ß√µes"
]

# Fun√ß√µes auxiliares
def carregar_planilha(caminho, colunas_ref=None):
    try:
        df = pd.read_excel(caminho)
        if colunas_ref:
            for col in colunas_ref:
                if col not in df.columns:
                    df[col] = ""
        return df
    except:
        return pd.DataFrame(columns=colunas_ref if colunas_ref else [])

def salvar_planilha(df, caminho):
    df.to_excel(caminho, index=False)

# Carga de dados
df_pacientes = carregar_planilha("Planilha_Mestre_Internacoes_Atualizada.xlsx", colunas)
df_medicos = carregar_planilha("Cadastro_Medicos.xlsx", ["Nome do M√©dico"])
df_altas = carregar_planilha("Pacientes_Altas_Atualizada.xlsx", colunas)
df_obitos = carregar_planilha("Pacientes_Obitos_Atualizada.xlsx", colunas)

st.sidebar.title("Menu")
pagina = st.sidebar.radio("Navega√ß√£o", ["Painel de Interna√ß√µes", "Cadastro de Paciente", "Cadastro de M√©dico"])
st.sidebar.button("üîÑ Atualizar Lista", on_click=st.rerun)

# ------------------ PAINEL ------------------
if pagina == "Painel de Interna√ß√µes":
    st.title("Pacientes Internados")

    if df_pacientes.empty:
        st.info("Nenhum paciente registrado no momento.")
    else:
        with st.sidebar.expander("Filtros"):
            medico = st.selectbox("M√©dico Respons√°vel", ["Todos"] + sorted(df_medicos["Nome do M√©dico"].dropna().unique().tolist()))
            unidade = st.selectbox("Unidade", ["Todos"] + sorted(df_pacientes["Unidade"].dropna().unique().tolist()))
            andar = st.selectbox("Andar", ["Todos"] + sorted(df_pacientes["Andar"].dropna().astype(str).unique().tolist()))
            risco = st.selectbox("Risco Assistencial", ["Todos", "Baixo", "Moderado", "Alto"])
            setor = st.selectbox("Setor Atual", ["Todos"] + sorted(df_pacientes["Setor Atual"].dropna().unique().tolist()))
            interc = st.selectbox("Com Intercorr√™ncia", ["Todos", "Sim"])
            alta_prevista = st.selectbox("Alta Amanh√£", ["Todos", "Sim", "N√£o"])
            paliativo = st.selectbox("Cuidado Paliativo", ["Todos", "Sim", "N√£o"])

        filtro = df_pacientes.copy()
        if medico != "Todos":
            filtro = filtro[filtro["Nome do M√©dico Respons√°vel"] == medico]
        if unidade != "Todos":
            filtro = filtro[filtro["Unidade"] == unidade]
        if andar != "Todos":
            filtro = filtro[filtro["Andar"].astype(str) == andar]
        if risco != "Todos":
            filtro = filtro[filtro["Risco Assistencial"] == risco]
        if setor != "Todos":
            filtro = filtro[filtro["Setor Atual"] == setor]
        else:
            filtro = filtro[filtro["Setor Atual"] != "CTI"]
        if interc == "Sim":
            filtro = filtro[filtro["Intercorr√™ncia"] != ""]
        if alta_prevista != "Todos":
            filtro = filtro[filtro["Alta Prevista para Amanh√£"] == alta_prevista]
        if paliativo != "Todos":
            filtro = filtro[filtro["Cuidado Paliativo"] == paliativo]

        if filtro.empty:
            st.warning("Nenhum paciente encontrado com os filtros aplicados.")
        else:
            for i, row in filtro.iterrows():
                if st.button(f"Editar Leito {row['N√∫mero do Leito']} - {row['Nome do Paciente']} - Dr. {row['Nome do M√©dico Respons√°vel']}", key=f"edit_{i}"):
                    st.session_state['editar_paciente'] = row["N√∫mero do Atendimento"]

    if 'editar_paciente' in st.session_state:
        atendimento = st.session_state['editar_paciente']
        linha = df_pacientes[df_pacientes["N√∫mero do Atendimento"] == atendimento]
        if not linha.empty:
            i = linha.index[0]
            st.subheader("Editar Paciente")
            with st.form("form_edicao"):
                st.text_input("Data de Atualiza√ß√£o", value=str(df_pacientes.at[i, "Data de Atualiza√ß√£o"]), disabled=True)
                df_pacientes.at[i, "Risco Assistencial"] = st.selectbox("Risco Assistencial", ["Baixo", "Moderado", "Alto"], index=["Baixo", "Moderado", "Alto"].index(df_pacientes.at[i, "Risco Assistencial"]) if df_pacientes.at[i, "Risco Assistencial"] in ["Baixo", "Moderado", "Alto"] else 0)
                df_pacientes.at[i, "Pend√™ncia do Turno"] = st.text_area("Pend√™ncia do Turno", value=df_pacientes.at[i, "Pend√™ncia do Turno"])
                df_pacientes.at[i, "Intercorr√™ncia"] = st.selectbox("Intercorr√™ncia", ["", "C√≥digo Azul", "C√≥digo Amarelo", "C√≥digo Laranja", "C√≥digo Verde", "Outro"], index=0 if pd.isna(df_pacientes.at[i, "Intercorr√™ncia"]) else ["", "C√≥digo Azul", "C√≥digo Amarelo", "C√≥digo Laranja", "C√≥digo Verde", "Outro"].index(df_pacientes.at[i, "Intercorr√™ncia"]))
                df_pacientes.at[i, "Descri√ß√£o da Intercorr√™ncia"] = st.text_input("Descri√ß√£o da Intercorr√™ncia", value=df_pacientes.at[i, "Descri√ß√£o da Intercorr√™ncia"])
                salvar = st.form_submit_button("Salvar")
                if salvar:
                    df_pacientes.at[i, "Data de Atualiza√ß√£o"] = datetime.now().date()
                    if df_pacientes.at[i, "Intercorr√™ncia"] and not df_pacientes.at[i, "Data/Hora da Intercorr√™ncia"]:
                        df_pacientes.at[i, "Data/Hora da Intercorr√™ncia"] = datetime.now().strftime("%d/%m/%Y %H:%M")
                    salvar_planilha(df_pacientes, "Planilha_Mestre_Internacoes_Atualizada.xlsx")
                    st.success("Altera√ß√µes salvas com sucesso.")
                    st.rerun()

            if st.button("Transferir para CTI"):
                df_pacientes.at[i, "Setor Atual"] = "CTI"
                salvar_planilha(df_pacientes, "Planilha_Mestre_Internacoes_Atualizada.xlsx")
                st.success("Transferido para CTI.")
                st.rerun()

            if st.button("Dar Alta"):
                df_pacientes.at[i, "Foi Alta"] = "Sim"
                df_altas = pd.concat([df_altas, pd.DataFrame([df_pacientes.loc[i]])], ignore_index=True)
                salvar_planilha(df_altas, "Pacientes_Altas_Atualizada.xlsx")
                df_pacientes.drop(i, inplace=True)
                salvar_planilha(df_pacientes, "Planilha_Mestre_Internacoes_Atualizada.xlsx")
                st.success("Alta registrada.")
                st.rerun()

            if st.button("Registrar √ìbito"):
                df_obitos = pd.concat([df_obitos, pd.DataFrame([df_pacientes.loc[i]])], ignore_index=True)
                salvar_planilha(df_obitos, "Pacientes_Obitos_Atualizada.xlsx")
                df_pacientes.drop(i, inplace=True)
                salvar_planilha(df_pacientes, "Planilha_Mestre_Internacoes_Atualizada.xlsx")
                st.success("√ìbito registrado.")
                st.rerun()

# ------------------ CADASTRO DE M√âDICO ------------------
elif pagina == "Cadastro de M√©dico":
    st.title("Cadastro de M√©dico")
    with st.form("form_medico"):
        novo_medico = st.text_input("Nome do M√©dico *")
        salvar = st.form_submit_button("Salvar")
        if salvar and novo_medico:
            df_medicos = pd.concat([df_medicos, pd.DataFrame([{"Nome do M√©dico": novo_medico}])], ignore_index=True)
            salvar_planilha(df_medicos, "Cadastro_Medicos.xlsx")
            st.success("M√©dico cadastrado com sucesso.")
            st.rerun()
